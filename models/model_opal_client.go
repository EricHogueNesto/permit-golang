/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// OPALClient struct for OPALClient
type OPALClient struct {
	DATA_TOPICS                     []string `json:"DATA_TOPICS"`
	CLIENT_TOKEN                    string   `json:"CLIENT_TOKEN"`
	SERVER_URL                      string   `json:"SERVER_URL"`
	SERVER_WS_URL                   string   `json:"SERVER_WS_URL"`
	SERVER_PUBSUB_URL               string   `json:"SERVER_PUBSUB_URL"`
	DEFAULT_DATA_SOURCES_CONFIG_URL string   `json:"DEFAULT_DATA_SOURCES_CONFIG_URL"`
	SCOPE_ID                        *string  `json:"SCOPE_ID,omitempty"`
}

// NewOPALClient instantiates a new OPALClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOPALClient(dATATOPICS []string, cLIENTTOKEN string, sERVERURL string, sERVERWSURL string, sERVERPUBSUBURL string, dEFAULTDATASOURCESCONFIGURL string) *OPALClient {
	this := OPALClient{}
	this.DATA_TOPICS = dATATOPICS
	this.CLIENT_TOKEN = cLIENTTOKEN
	this.SERVER_URL = sERVERURL
	this.SERVER_WS_URL = sERVERWSURL
	this.SERVER_PUBSUB_URL = sERVERPUBSUBURL
	this.DEFAULT_DATA_SOURCES_CONFIG_URL = dEFAULTDATASOURCESCONFIGURL
	return &this
}

// NewOPALClientWithDefaults instantiates a new OPALClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOPALClientWithDefaults() *OPALClient {
	this := OPALClient{}
	return &this
}

// GetDATA_TOPICS returns the DATA_TOPICS field value
func (o *OPALClient) GetDATA_TOPICS() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DATA_TOPICS
}

// GetDATA_TOPICSOk returns a tuple with the DATA_TOPICS field value
// and a boolean to check if the value has been set.
func (o *OPALClient) GetDATA_TOPICSOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DATA_TOPICS, true
}

// SetDATA_TOPICS sets field value
func (o *OPALClient) SetDATA_TOPICS(v []string) {
	o.DATA_TOPICS = v
}

// GetCLIENT_TOKEN returns the CLIENT_TOKEN field value
func (o *OPALClient) GetCLIENT_TOKEN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CLIENT_TOKEN
}

// GetCLIENT_TOKENOk returns a tuple with the CLIENT_TOKEN field value
// and a boolean to check if the value has been set.
func (o *OPALClient) GetCLIENT_TOKENOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CLIENT_TOKEN, true
}

// SetCLIENT_TOKEN sets field value
func (o *OPALClient) SetCLIENT_TOKEN(v string) {
	o.CLIENT_TOKEN = v
}

// GetSERVER_URL returns the SERVER_URL field value
func (o *OPALClient) GetSERVER_URL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SERVER_URL
}

// GetSERVER_URLOk returns a tuple with the SERVER_URL field value
// and a boolean to check if the value has been set.
func (o *OPALClient) GetSERVER_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SERVER_URL, true
}

// SetSERVER_URL sets field value
func (o *OPALClient) SetSERVER_URL(v string) {
	o.SERVER_URL = v
}

// GetSERVER_WS_URL returns the SERVER_WS_URL field value
func (o *OPALClient) GetSERVER_WS_URL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SERVER_WS_URL
}

// GetSERVER_WS_URLOk returns a tuple with the SERVER_WS_URL field value
// and a boolean to check if the value has been set.
func (o *OPALClient) GetSERVER_WS_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SERVER_WS_URL, true
}

// SetSERVER_WS_URL sets field value
func (o *OPALClient) SetSERVER_WS_URL(v string) {
	o.SERVER_WS_URL = v
}

// GetSERVER_PUBSUB_URL returns the SERVER_PUBSUB_URL field value
func (o *OPALClient) GetSERVER_PUBSUB_URL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SERVER_PUBSUB_URL
}

// GetSERVER_PUBSUB_URLOk returns a tuple with the SERVER_PUBSUB_URL field value
// and a boolean to check if the value has been set.
func (o *OPALClient) GetSERVER_PUBSUB_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SERVER_PUBSUB_URL, true
}

// SetSERVER_PUBSUB_URL sets field value
func (o *OPALClient) SetSERVER_PUBSUB_URL(v string) {
	o.SERVER_PUBSUB_URL = v
}

// GetDEFAULT_DATA_SOURCES_CONFIG_URL returns the DEFAULT_DATA_SOURCES_CONFIG_URL field value
func (o *OPALClient) GetDEFAULT_DATA_SOURCES_CONFIG_URL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DEFAULT_DATA_SOURCES_CONFIG_URL
}

// GetDEFAULT_DATA_SOURCES_CONFIG_URLOk returns a tuple with the DEFAULT_DATA_SOURCES_CONFIG_URL field value
// and a boolean to check if the value has been set.
func (o *OPALClient) GetDEFAULT_DATA_SOURCES_CONFIG_URLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DEFAULT_DATA_SOURCES_CONFIG_URL, true
}

// SetDEFAULT_DATA_SOURCES_CONFIG_URL sets field value
func (o *OPALClient) SetDEFAULT_DATA_SOURCES_CONFIG_URL(v string) {
	o.DEFAULT_DATA_SOURCES_CONFIG_URL = v
}

// GetSCOPE_ID returns the SCOPE_ID field value if set, zero value otherwise.
func (o *OPALClient) GetSCOPE_ID() string {
	if o == nil || IsNil(o.SCOPE_ID) {
		var ret string
		return ret
	}
	return *o.SCOPE_ID
}

// GetSCOPE_IDOk returns a tuple with the SCOPE_ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OPALClient) GetSCOPE_IDOk() (*string, bool) {
	if o == nil || IsNil(o.SCOPE_ID) {
		return nil, false
	}
	return o.SCOPE_ID, true
}

// HasSCOPE_ID returns a boolean if a field has been set.
func (o *OPALClient) HasSCOPE_ID() bool {
	if o != nil && !IsNil(o.SCOPE_ID) {
		return true
	}

	return false
}

// SetSCOPE_ID gets a reference to the given string and assigns it to the SCOPE_ID field.
func (o *OPALClient) SetSCOPE_ID(v string) {
	o.SCOPE_ID = &v
}

func (o OPALClient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["DATA_TOPICS"] = o.DATA_TOPICS
	}
	if true {
		toSerialize["CLIENT_TOKEN"] = o.CLIENT_TOKEN
	}
	if true {
		toSerialize["SERVER_URL"] = o.SERVER_URL
	}
	if true {
		toSerialize["SERVER_WS_URL"] = o.SERVER_WS_URL
	}
	if true {
		toSerialize["SERVER_PUBSUB_URL"] = o.SERVER_PUBSUB_URL
	}
	if true {
		toSerialize["DEFAULT_DATA_SOURCES_CONFIG_URL"] = o.DEFAULT_DATA_SOURCES_CONFIG_URL
	}
	if !IsNil(o.SCOPE_ID) {
		toSerialize["SCOPE_ID"] = o.SCOPE_ID
	}
	return json.Marshal(toSerialize)
}

type NullableOPALClient struct {
	value *OPALClient
	isSet bool
}

func (v NullableOPALClient) Get() *OPALClient {
	return v.value
}

func (v *NullableOPALClient) Set(val *OPALClient) {
	v.value = val
	v.isSet = true
}

func (v NullableOPALClient) IsSet() bool {
	return v.isSet
}

func (v *NullableOPALClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOPALClient(val *OPALClient) *NullableOPALClient {
	return &NullableOPALClient{value: val, isSet: true}
}

func (v NullableOPALClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOPALClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
