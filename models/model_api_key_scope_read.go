/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// APIKeyScopeRead struct for APIKeyScopeRead
type APIKeyScopeRead struct {
	// Unique id of the organization that the api_key belongs to.
	OrganizationId string `json:"organization_id"`
	// Unique id of the project that the api_key belongs to.
	ProjectId *string `json:"project_id,omitempty"`
	// Unique id of the environment that the api_key belongs to.
	EnvironmentId *string `json:"environment_id,omitempty"`
}

// NewAPIKeyScopeRead instantiates a new APIKeyScopeRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIKeyScopeRead(organizationId string) *APIKeyScopeRead {
	this := APIKeyScopeRead{}
	this.OrganizationId = organizationId
	return &this
}

// NewAPIKeyScopeReadWithDefaults instantiates a new APIKeyScopeRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIKeyScopeReadWithDefaults() *APIKeyScopeRead {
	this := APIKeyScopeRead{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value
func (o *APIKeyScopeRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *APIKeyScopeRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *APIKeyScopeRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *APIKeyScopeRead) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyScopeRead) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *APIKeyScopeRead) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *APIKeyScopeRead) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *APIKeyScopeRead) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyScopeRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *APIKeyScopeRead) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *APIKeyScopeRead) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

func (o APIKeyScopeRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	return json.Marshal(toSerialize)
}

type NullableAPIKeyScopeRead struct {
	value *APIKeyScopeRead
	isSet bool
}

func (v NullableAPIKeyScopeRead) Get() *APIKeyScopeRead {
	return v.value
}

func (v *NullableAPIKeyScopeRead) Set(val *APIKeyScopeRead) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIKeyScopeRead) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIKeyScopeRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIKeyScopeRead(val *APIKeyScopeRead) *NullableAPIKeyScopeRead {
	return &NullableAPIKeyScopeRead{value: val, isSet: true}
}

func (v NullableAPIKeyScopeRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIKeyScopeRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
