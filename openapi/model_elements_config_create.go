/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ElementsConfigCreate struct for ElementsConfigCreate
type ElementsConfigCreate struct {
	// A URL-friendly name of the elements_config (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the elements_config.
	Key string `json:"key"`
	// The name of the elements_config
	Name string `json:"name"`
	// The type of the elements interface, e.g: user management
	ElementsType ElementsType `json:"elements_type"`
	// Obj with the options of the elements interface, e.g: primary color
	Settings map[string]Settings `json:"settings"`
	// Obj with levels as keys and role ids as values
	RolesToLevels map[string][]string `json:"roles_to_levels"`
	Webhook       *WebhookCreate      `json:"webhook,omitempty"`
}

// NewElementsConfigCreate instantiates a new ElementsConfigCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewElementsConfigCreate(key string, name string, elementsType ElementsType, settings map[string]Settings, rolesToLevels map[string][]string) *ElementsConfigCreate {
	this := ElementsConfigCreate{}
	this.Key = key
	this.Name = name
	this.ElementsType = elementsType
	this.Settings = settings
	this.RolesToLevels = rolesToLevels
	return &this
}

// NewElementsConfigCreateWithDefaults instantiates a new ElementsConfigCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewElementsConfigCreateWithDefaults() *ElementsConfigCreate {
	this := ElementsConfigCreate{}
	return &this
}

// GetKey returns the Key field value
func (o *ElementsConfigCreate) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigCreate) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ElementsConfigCreate) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *ElementsConfigCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ElementsConfigCreate) SetName(v string) {
	o.Name = v
}

// GetElementsType returns the ElementsType field value
func (o *ElementsConfigCreate) GetElementsType() ElementsType {
	if o == nil {
		var ret ElementsType
		return ret
	}

	return o.ElementsType
}

// GetElementsTypeOk returns a tuple with the ElementsType field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigCreate) GetElementsTypeOk() (*ElementsType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ElementsType, true
}

// SetElementsType sets field value
func (o *ElementsConfigCreate) SetElementsType(v ElementsType) {
	o.ElementsType = v
}

// GetSettings returns the Settings field value
func (o *ElementsConfigCreate) GetSettings() map[string]Settings {
	if o == nil {
		var ret map[string]Settings
		return ret
	}

	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigCreate) GetSettingsOk() (*map[string]Settings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Settings, true
}

// SetSettings sets field value
func (o *ElementsConfigCreate) SetSettings(v map[string]Settings) {
	o.Settings = v
}

// GetRolesToLevels returns the RolesToLevels field value
func (o *ElementsConfigCreate) GetRolesToLevels() map[string][]string {
	if o == nil {
		var ret map[string][]string
		return ret
	}

	return o.RolesToLevels
}

// GetRolesToLevelsOk returns a tuple with the RolesToLevels field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigCreate) GetRolesToLevelsOk() (*map[string][]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RolesToLevels, true
}

// SetRolesToLevels sets field value
func (o *ElementsConfigCreate) SetRolesToLevels(v map[string][]string) {
	o.RolesToLevels = v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *ElementsConfigCreate) GetWebhook() WebhookCreate {
	if o == nil || isNil(o.Webhook) {
		var ret WebhookCreate
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ElementsConfigCreate) GetWebhookOk() (*WebhookCreate, bool) {
	if o == nil || isNil(o.Webhook) {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *ElementsConfigCreate) HasWebhook() bool {
	if o != nil && !isNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given WebhookCreate and assigns it to the Webhook field.
func (o *ElementsConfigCreate) SetWebhook(v WebhookCreate) {
	o.Webhook = &v
}

func (o ElementsConfigCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["elements_type"] = o.ElementsType
	}
	if true {
		toSerialize["settings"] = o.Settings
	}
	if true {
		toSerialize["roles_to_levels"] = o.RolesToLevels
	}
	if !isNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	return json.Marshal(toSerialize)
}

type NullableElementsConfigCreate struct {
	value *ElementsConfigCreate
	isSet bool
}

func (v NullableElementsConfigCreate) Get() *ElementsConfigCreate {
	return v.value
}

func (v *NullableElementsConfigCreate) Set(val *ElementsConfigCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableElementsConfigCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableElementsConfigCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableElementsConfigCreate(val *ElementsConfigCreate) *NullableElementsConfigCreate {
	return &NullableElementsConfigCreate{value: val, isSet: true}
}

func (v NullableElementsConfigCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableElementsConfigCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
