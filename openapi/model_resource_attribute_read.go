/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// ResourceAttributeRead struct for ResourceAttributeRead
type ResourceAttributeRead struct {
	// The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.
	Type AttributeType `json:"type"`
	// An optional longer description of what this attribute respresents in your system
	Description *string `json:"description,omitempty"`
	// A URL-friendly name of the attribute (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the attribute.
	Key string `json:"key"`
	// Unique id of the attribute
	Id string `json:"id"`
	// Unique id of the resource that the attribute belongs to.
	ResourceId string `json:"resource_id"`
	// A URL-friendly name of the resource (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the resource.
	ResourceKey string `json:"resource_key"`
	// Unique id of the organization that the attribute belongs to.
	OrganizationId string `json:"organization_id"`
	// Unique id of the project that the attribute belongs to.
	ProjectId string `json:"project_id"`
	// Unique id of the environment that the attribute belongs to.
	EnvironmentId string `json:"environment_id"`
	// Date and time when the attribute was created (ISO_8601 format).
	CreatedAt time.Time `json:"created_at"`
	// Date and time when the attribute was last updated/modified (ISO_8601 format).
	UpdatedAt time.Time `json:"updated_at"`
}

// NewResourceAttributeRead instantiates a new ResourceAttributeRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceAttributeRead(type_ AttributeType, key string, id string, resourceId string, resourceKey string, organizationId string, projectId string, environmentId string, createdAt time.Time, updatedAt time.Time) *ResourceAttributeRead {
	this := ResourceAttributeRead{}
	this.Type = type_
	this.Key = key
	this.Id = id
	this.ResourceId = resourceId
	this.ResourceKey = resourceKey
	this.OrganizationId = organizationId
	this.ProjectId = projectId
	this.EnvironmentId = environmentId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewResourceAttributeReadWithDefaults instantiates a new ResourceAttributeRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceAttributeReadWithDefaults() *ResourceAttributeRead {
	this := ResourceAttributeRead{}
	return &this
}

// GetType returns the Type field value
func (o *ResourceAttributeRead) GetType() AttributeType {
	if o == nil {
		var ret AttributeType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetTypeOk() (*AttributeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ResourceAttributeRead) SetType(v AttributeType) {
	o.Type = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ResourceAttributeRead) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ResourceAttributeRead) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ResourceAttributeRead) SetDescription(v string) {
	o.Description = &v
}

// GetKey returns the Key field value
func (o *ResourceAttributeRead) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ResourceAttributeRead) SetKey(v string) {
	o.Key = v
}

// GetId returns the Id field value
func (o *ResourceAttributeRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResourceAttributeRead) SetId(v string) {
	o.Id = v
}

// GetResourceId returns the ResourceId field value
func (o *ResourceAttributeRead) GetResourceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceId
}

// GetResourceIdOk returns a tuple with the ResourceId field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetResourceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceId, true
}

// SetResourceId sets field value
func (o *ResourceAttributeRead) SetResourceId(v string) {
	o.ResourceId = v
}

// GetResourceKey returns the ResourceKey field value
func (o *ResourceAttributeRead) GetResourceKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceKey
}

// GetResourceKeyOk returns a tuple with the ResourceKey field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetResourceKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceKey, true
}

// SetResourceKey sets field value
func (o *ResourceAttributeRead) SetResourceKey(v string) {
	o.ResourceKey = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *ResourceAttributeRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ResourceAttributeRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value
func (o *ResourceAttributeRead) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ResourceAttributeRead) SetProjectId(v string) {
	o.ProjectId = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *ResourceAttributeRead) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *ResourceAttributeRead) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ResourceAttributeRead) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ResourceAttributeRead) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ResourceAttributeRead) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ResourceAttributeRead) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ResourceAttributeRead) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ResourceAttributeRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["resource_id"] = o.ResourceId
	}
	if true {
		toSerialize["resource_key"] = o.ResourceKey
	}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if true {
		toSerialize["project_id"] = o.ProjectId
	}
	if true {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableResourceAttributeRead struct {
	value *ResourceAttributeRead
	isSet bool
}

func (v NullableResourceAttributeRead) Get() *ResourceAttributeRead {
	return v.value
}

func (v *NullableResourceAttributeRead) Set(val *ResourceAttributeRead) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceAttributeRead) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceAttributeRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceAttributeRead(val *ResourceAttributeRead) *NullableResourceAttributeRead {
	return &NullableResourceAttributeRead{value: val, isSet: true}
}

func (v NullableResourceAttributeRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceAttributeRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
