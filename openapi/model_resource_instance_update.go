/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResourceInstanceUpdate struct for ResourceInstanceUpdate
type ResourceInstanceUpdate struct {
	// Arbitraty resource attributes that will be used to enforce attribute-based access control policies.
	Attributes map[string]interface{} `json:"attributes,omitempty"`
}

// NewResourceInstanceUpdate instantiates a new ResourceInstanceUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceInstanceUpdate() *ResourceInstanceUpdate {
	this := ResourceInstanceUpdate{}
	return &this
}

// NewResourceInstanceUpdateWithDefaults instantiates a new ResourceInstanceUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceInstanceUpdateWithDefaults() *ResourceInstanceUpdate {
	this := ResourceInstanceUpdate{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *ResourceInstanceUpdate) GetAttributes() map[string]interface{} {
	if o == nil || isNil(o.Attributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceInstanceUpdate) GetAttributesOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Attributes) {
		return map[string]interface{}{}, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *ResourceInstanceUpdate) HasAttributes() bool {
	if o != nil && !isNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given map[string]interface{} and assigns it to the Attributes field.
func (o *ResourceInstanceUpdate) SetAttributes(v map[string]interface{}) {
	o.Attributes = v
}

func (o ResourceInstanceUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return json.Marshal(toSerialize)
}

type NullableResourceInstanceUpdate struct {
	value *ResourceInstanceUpdate
	isSet bool
}

func (v NullableResourceInstanceUpdate) Get() *ResourceInstanceUpdate {
	return v.value
}

func (v *NullableResourceInstanceUpdate) Set(val *ResourceInstanceUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceInstanceUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceInstanceUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceInstanceUpdate(val *ResourceInstanceUpdate) *NullableResourceInstanceUpdate {
	return &NullableResourceInstanceUpdate{value: val, isSet: true}
}

func (v NullableResourceInstanceUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceInstanceUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
