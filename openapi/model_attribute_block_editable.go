/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AttributeBlockEditable struct for AttributeBlockEditable
type AttributeBlockEditable struct {
	// The type of the attribute, we currently support: `bool`, `number` (ints, floats), `time` (a timestamp), `string`, and `json`.
	Type AttributeType `json:"type"`
	// optional description string explaining what data this attribute will store
	Description *string `json:"description,omitempty"`
}

// NewAttributeBlockEditable instantiates a new AttributeBlockEditable object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeBlockEditable(type_ AttributeType) *AttributeBlockEditable {
	this := AttributeBlockEditable{}
	this.Type = type_
	return &this
}

// NewAttributeBlockEditableWithDefaults instantiates a new AttributeBlockEditable object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeBlockEditableWithDefaults() *AttributeBlockEditable {
	this := AttributeBlockEditable{}
	return &this
}

// GetType returns the Type field value
func (o *AttributeBlockEditable) GetType() AttributeType {
	if o == nil {
		var ret AttributeType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *AttributeBlockEditable) GetTypeOk() (*AttributeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *AttributeBlockEditable) SetType(v AttributeType) {
	o.Type = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AttributeBlockEditable) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AttributeBlockEditable) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AttributeBlockEditable) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AttributeBlockEditable) SetDescription(v string) {
	o.Description = &v
}

func (o AttributeBlockEditable) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableAttributeBlockEditable struct {
	value *AttributeBlockEditable
	isSet bool
}

func (v NullableAttributeBlockEditable) Get() *AttributeBlockEditable {
	return v.value
}

func (v *NullableAttributeBlockEditable) Set(val *AttributeBlockEditable) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeBlockEditable) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeBlockEditable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeBlockEditable(val *AttributeBlockEditable) *NullableAttributeBlockEditable {
	return &NullableAttributeBlockEditable{value: val, isSet: true}
}

func (v NullableAttributeBlockEditable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeBlockEditable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
