/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DevLogin struct for DevLogin
type DevLogin struct {
	// an email address from which to create a DEV MODE session
	Username string `json:"username"`
}

// NewDevLogin instantiates a new DevLogin object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevLogin(username string) *DevLogin {
	this := DevLogin{}
	this.Username = username
	return &this
}

// NewDevLoginWithDefaults instantiates a new DevLogin object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevLoginWithDefaults() *DevLogin {
	this := DevLogin{}
	return &this
}

// GetUsername returns the Username field value
func (o *DevLogin) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *DevLogin) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *DevLogin) SetUsername(v string) {
	o.Username = v
}

func (o DevLogin) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableDevLogin struct {
	value *DevLogin
	isSet bool
}

func (v NullableDevLogin) Get() *DevLogin {
	return v.value
}

func (v *NullableDevLogin) Set(val *DevLogin) {
	v.value = val
	v.isSet = true
}

func (v NullableDevLogin) IsSet() bool {
	return v.isSet
}

func (v *NullableDevLogin) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevLogin(val *DevLogin) *NullableDevLogin {
	return &NullableDevLogin{value: val, isSet: true}
}

func (v NullableDevLogin) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevLogin) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
