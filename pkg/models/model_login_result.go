/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// LoginResult struct for LoginResult
type LoginResult struct {
	// whether login was successful
	LoggedIn bool `json:"logged_in"`
	// when will the login session expire (the unix timestamp in seconds)
	ExpiresAt int32 `json:"expires_at"`
	// the active organization on the session after the login
	ActiveOrgId   *string              `json:"active_org_id,omitempty"`
	InviteAttempt *InviteAttemptResult `json:"invite_attempt,omitempty"`
}

// NewLoginResult instantiates a new LoginResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLoginResult(loggedIn bool, expiresAt int32) *LoginResult {
	this := LoginResult{}
	this.LoggedIn = loggedIn
	this.ExpiresAt = expiresAt
	return &this
}

// NewLoginResultWithDefaults instantiates a new LoginResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLoginResultWithDefaults() *LoginResult {
	this := LoginResult{}
	return &this
}

// GetLoggedIn returns the LoggedIn field value
func (o *LoginResult) GetLoggedIn() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LoggedIn
}

// GetLoggedInOk returns a tuple with the LoggedIn field value
// and a boolean to check if the value has been set.
func (o *LoginResult) GetLoggedInOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LoggedIn, true
}

// SetLoggedIn sets field value
func (o *LoginResult) SetLoggedIn(v bool) {
	o.LoggedIn = v
}

// GetExpiresAt returns the ExpiresAt field value
func (o *LoginResult) GetExpiresAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
func (o *LoginResult) GetExpiresAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpiresAt, true
}

// SetExpiresAt sets field value
func (o *LoginResult) SetExpiresAt(v int32) {
	o.ExpiresAt = v
}

// GetActiveOrgId returns the ActiveOrgId field value if set, zero value otherwise.
func (o *LoginResult) GetActiveOrgId() string {
	if o == nil || IsNil(o.ActiveOrgId) {
		var ret string
		return ret
	}
	return *o.ActiveOrgId
}

// GetActiveOrgIdOk returns a tuple with the ActiveOrgId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginResult) GetActiveOrgIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActiveOrgId) {
		return nil, false
	}
	return o.ActiveOrgId, true
}

// HasActiveOrgId returns a boolean if a field has been set.
func (o *LoginResult) HasActiveOrgId() bool {
	if o != nil && !IsNil(o.ActiveOrgId) {
		return true
	}

	return false
}

// SetActiveOrgId gets a reference to the given string and assigns it to the ActiveOrgId field.
func (o *LoginResult) SetActiveOrgId(v string) {
	o.ActiveOrgId = &v
}

// GetInviteAttempt returns the InviteAttempt field value if set, zero value otherwise.
func (o *LoginResult) GetInviteAttempt() InviteAttemptResult {
	if o == nil || IsNil(o.InviteAttempt) {
		var ret InviteAttemptResult
		return ret
	}
	return *o.InviteAttempt
}

// GetInviteAttemptOk returns a tuple with the InviteAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LoginResult) GetInviteAttemptOk() (*InviteAttemptResult, bool) {
	if o == nil || IsNil(o.InviteAttempt) {
		return nil, false
	}
	return o.InviteAttempt, true
}

// HasInviteAttempt returns a boolean if a field has been set.
func (o *LoginResult) HasInviteAttempt() bool {
	if o != nil && !IsNil(o.InviteAttempt) {
		return true
	}

	return false
}

// SetInviteAttempt gets a reference to the given InviteAttemptResult and assigns it to the InviteAttempt field.
func (o *LoginResult) SetInviteAttempt(v InviteAttemptResult) {
	o.InviteAttempt = &v
}

func (o LoginResult) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["logged_in"] = o.LoggedIn
	}
	if true {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.ActiveOrgId) {
		toSerialize["active_org_id"] = o.ActiveOrgId
	}
	if !IsNil(o.InviteAttempt) {
		toSerialize["invite_attempt"] = o.InviteAttempt
	}
	return json.Marshal(toSerialize)
}

type NullableLoginResult struct {
	value *LoginResult
	isSet bool
}

func (v NullableLoginResult) Get() *LoginResult {
	return v.value
}

func (v *NullableLoginResult) Set(val *LoginResult) {
	v.value = val
	v.isSet = true
}

func (v NullableLoginResult) IsSet() bool {
	return v.isSet
}

func (v *NullableLoginResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLoginResult(val *LoginResult) *NullableLoginResult {
	return &NullableLoginResult{value: val, isSet: true}
}

func (v NullableLoginResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLoginResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
