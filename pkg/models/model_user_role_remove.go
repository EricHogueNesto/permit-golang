/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// UserRoleRemove struct for UserRoleRemove
type UserRoleRemove struct {
	// the role that will be unassigned (accepts either the role id or the role key)
	Role string `json:"role"`
	// the tenant the role is associated with (accepts either the tenant id or the tenant key)
	Tenant string `json:"tenant"`
}

// NewUserRoleRemove instantiates a new UserRoleRemove object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserRoleRemove(role string, tenant string) *UserRoleRemove {
	this := UserRoleRemove{}
	this.Role = role
	this.Tenant = tenant
	return &this
}

// NewUserRoleRemoveWithDefaults instantiates a new UserRoleRemove object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserRoleRemoveWithDefaults() *UserRoleRemove {
	this := UserRoleRemove{}
	return &this
}

// GetRole returns the Role field value
func (o *UserRoleRemove) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *UserRoleRemove) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *UserRoleRemove) SetRole(v string) {
	o.Role = v
}

// GetTenant returns the Tenant field value
func (o *UserRoleRemove) GetTenant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *UserRoleRemove) GetTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *UserRoleRemove) SetTenant(v string) {
	o.Tenant = v
}

func (o UserRoleRemove) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["tenant"] = o.Tenant
	}
	return json.Marshal(toSerialize)
}

type NullableUserRoleRemove struct {
	value *UserRoleRemove
	isSet bool
}

func (v NullableUserRoleRemove) Get() *UserRoleRemove {
	return v.value
}

func (v *NullableUserRoleRemove) Set(val *UserRoleRemove) {
	v.value = val
	v.isSet = true
}

func (v NullableUserRoleRemove) IsSet() bool {
	return v.isSet
}

func (v *NullableUserRoleRemove) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserRoleRemove(val *UserRoleRemove) *NullableUserRoleRemove {
	return &NullableUserRoleRemove{value: val, isSet: true}
}

func (v NullableUserRoleRemove) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserRoleRemove) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
