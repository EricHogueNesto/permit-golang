/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// ElementsConfigRead struct for ElementsConfigRead
type ElementsConfigRead struct {
	// A URL-friendly name of the elements_config (i.e: slug). You will be able to query later using this key instead of the id (UUID) of the elements_config.
	Key string `json:"key"`
	// Unique id of the elements_config
	Id string `json:"id"`
	// Unique id of the organization that the elements_config belongs to.
	OrganizationId string `json:"organization_id"`
	// Unique id of the project that the elements_config belongs to.
	ProjectId string `json:"project_id"`
	// Unique id of the environment that the elements_config belongs to.
	EnvironmentId string `json:"environment_id"`
	// Date and time when the elements_config was created (ISO_8601 format).
	CreatedAt time.Time `json:"created_at"`
	// Date and time when the elements_config was last updated/modified (ISO_8601 format).
	UpdatedAt time.Time `json:"updated_at"`
	IsActive  bool      `json:"is_active"`
	// The name of the elements_config
	Name string `json:"name"`
	// The type of the elements interface, e.g: user management
	ElementsType ElementsType `json:"elements_type"`
	// Obj with the options of the elements interface, e.g: primary color
	Settings map[string]Settings `json:"settings"`
	// Obj with levels as keys and role ids as values
	RolesToLevels map[string][]PermissionLevelRoleRead `json:"roles_to_levels"`
	Webhook       *WebhookRead                         `json:"webhook,omitempty"`
}

// NewElementsConfigRead instantiates a new ElementsConfigRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewElementsConfigRead(key string, id string, organizationId string, projectId string, environmentId string, createdAt time.Time, updatedAt time.Time, isActive bool, name string, elementsType ElementsType, settings map[string]Settings, rolesToLevels map[string][]PermissionLevelRoleRead) *ElementsConfigRead {
	this := ElementsConfigRead{}
	this.Key = key
	this.Id = id
	this.OrganizationId = organizationId
	this.ProjectId = projectId
	this.EnvironmentId = environmentId
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.IsActive = isActive
	this.Name = name
	this.ElementsType = elementsType
	this.Settings = settings
	this.RolesToLevels = rolesToLevels
	return &this
}

// NewElementsConfigReadWithDefaults instantiates a new ElementsConfigRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewElementsConfigReadWithDefaults() *ElementsConfigRead {
	this := ElementsConfigRead{}
	return &this
}

// GetKey returns the Key field value
func (o *ElementsConfigRead) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ElementsConfigRead) SetKey(v string) {
	o.Key = v
}

// GetId returns the Id field value
func (o *ElementsConfigRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ElementsConfigRead) SetId(v string) {
	o.Id = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *ElementsConfigRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ElementsConfigRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value
func (o *ElementsConfigRead) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *ElementsConfigRead) SetProjectId(v string) {
	o.ProjectId = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *ElementsConfigRead) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *ElementsConfigRead) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ElementsConfigRead) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ElementsConfigRead) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ElementsConfigRead) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ElementsConfigRead) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetIsActive returns the IsActive field value
func (o *ElementsConfigRead) GetIsActive() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsActive
}

// GetIsActiveOk returns a tuple with the IsActive field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetIsActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsActive, true
}

// SetIsActive sets field value
func (o *ElementsConfigRead) SetIsActive(v bool) {
	o.IsActive = v
}

// GetName returns the Name field value
func (o *ElementsConfigRead) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ElementsConfigRead) SetName(v string) {
	o.Name = v
}

// GetElementsType returns the ElementsType field value
func (o *ElementsConfigRead) GetElementsType() ElementsType {
	if o == nil {
		var ret ElementsType
		return ret
	}

	return o.ElementsType
}

// GetElementsTypeOk returns a tuple with the ElementsType field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetElementsTypeOk() (*ElementsType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ElementsType, true
}

// SetElementsType sets field value
func (o *ElementsConfigRead) SetElementsType(v ElementsType) {
	o.ElementsType = v
}

// GetSettings returns the Settings field value
func (o *ElementsConfigRead) GetSettings() map[string]Settings {
	if o == nil {
		var ret map[string]Settings
		return ret
	}

	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetSettingsOk() (*map[string]Settings, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Settings, true
}

// SetSettings sets field value
func (o *ElementsConfigRead) SetSettings(v map[string]Settings) {
	o.Settings = v
}

// GetRolesToLevels returns the RolesToLevels field value
func (o *ElementsConfigRead) GetRolesToLevels() map[string][]PermissionLevelRoleRead {
	if o == nil {
		var ret map[string][]PermissionLevelRoleRead
		return ret
	}

	return o.RolesToLevels
}

// GetRolesToLevelsOk returns a tuple with the RolesToLevels field value
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetRolesToLevelsOk() (*map[string][]PermissionLevelRoleRead, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RolesToLevels, true
}

// SetRolesToLevels sets field value
func (o *ElementsConfigRead) SetRolesToLevels(v map[string][]PermissionLevelRoleRead) {
	o.RolesToLevels = v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise.
func (o *ElementsConfigRead) GetWebhook() WebhookRead {
	if o == nil || IsNil(o.Webhook) {
		var ret WebhookRead
		return ret
	}
	return *o.Webhook
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ElementsConfigRead) GetWebhookOk() (*WebhookRead, bool) {
	if o == nil || IsNil(o.Webhook) {
		return nil, false
	}
	return o.Webhook, true
}

// HasWebhook returns a boolean if a field has been set.
func (o *ElementsConfigRead) HasWebhook() bool {
	if o != nil && !IsNil(o.Webhook) {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given WebhookRead and assigns it to the Webhook field.
func (o *ElementsConfigRead) SetWebhook(v WebhookRead) {
	o.Webhook = &v
}

func (o ElementsConfigRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if true {
		toSerialize["project_id"] = o.ProjectId
	}
	if true {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["is_active"] = o.IsActive
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["elements_type"] = o.ElementsType
	}
	if true {
		toSerialize["settings"] = o.Settings
	}
	if true {
		toSerialize["roles_to_levels"] = o.RolesToLevels
	}
	if !IsNil(o.Webhook) {
		toSerialize["webhook"] = o.Webhook
	}
	return json.Marshal(toSerialize)
}

type NullableElementsConfigRead struct {
	value *ElementsConfigRead
	isSet bool
}

func (v NullableElementsConfigRead) Get() *ElementsConfigRead {
	return v.value
}

func (v *NullableElementsConfigRead) Set(val *ElementsConfigRead) {
	v.value = val
	v.isSet = true
}

func (v NullableElementsConfigRead) IsSet() bool {
	return v.isSet
}

func (v *NullableElementsConfigRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableElementsConfigRead(val *ElementsConfigRead) *NullableElementsConfigRead {
	return &NullableElementsConfigRead{value: val, isSet: true}
}

func (v NullableElementsConfigRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableElementsConfigRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
