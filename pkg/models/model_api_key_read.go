/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
	"time"
)

// APIKeyRead struct for APIKeyRead
type APIKeyRead struct {
	OrganizationId  string             `json:"organization_id"`
	ProjectId       *string            `json:"project_id,omitempty"`
	EnvironmentId   *string            `json:"environment_id,omitempty"`
	ObjectType      *MemberAccessObj   `json:"object_type,omitempty"`
	AccessLevel     *MemberAccessLevel `json:"access_level,omitempty"`
	OwnerType       APIKeyOwnerType    `json:"owner_type"`
	Id              string             `json:"id"`
	Secret          *string            `json:"secret,omitempty"`
	CreatedAt       time.Time          `json:"created_at"`
	CreatedByMember OrgMemberRead      `json:"created_by_member"`
	LastUsedAt      *time.Time         `json:"last_used_at,omitempty"`
}

// NewAPIKeyRead instantiates a new APIKeyRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAPIKeyRead(organizationId string, ownerType APIKeyOwnerType, id string, createdAt time.Time, createdByMember OrgMemberRead) *APIKeyRead {
	this := APIKeyRead{}
	this.OrganizationId = organizationId
	var objectType MemberAccessObj = ENV
	this.ObjectType = &objectType
	var accessLevel MemberAccessLevel = ADMIN
	this.AccessLevel = &accessLevel
	this.OwnerType = ownerType
	this.Id = id
	this.CreatedAt = createdAt
	this.CreatedByMember = createdByMember
	return &this
}

// NewAPIKeyReadWithDefaults instantiates a new APIKeyRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAPIKeyReadWithDefaults() *APIKeyRead {
	this := APIKeyRead{}
	var objectType MemberAccessObj = ENV
	this.ObjectType = &objectType
	var accessLevel MemberAccessLevel = ADMIN
	this.AccessLevel = &accessLevel
	return &this
}

// GetOrganizationId returns the OrganizationId field value
func (o *APIKeyRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *APIKeyRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *APIKeyRead) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *APIKeyRead) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *APIKeyRead) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetEnvironmentId returns the EnvironmentId field value if set, zero value otherwise.
func (o *APIKeyRead) GetEnvironmentId() string {
	if o == nil || IsNil(o.EnvironmentId) {
		var ret string
		return ret
	}
	return *o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.EnvironmentId) {
		return nil, false
	}
	return o.EnvironmentId, true
}

// HasEnvironmentId returns a boolean if a field has been set.
func (o *APIKeyRead) HasEnvironmentId() bool {
	if o != nil && !IsNil(o.EnvironmentId) {
		return true
	}

	return false
}

// SetEnvironmentId gets a reference to the given string and assigns it to the EnvironmentId field.
func (o *APIKeyRead) SetEnvironmentId(v string) {
	o.EnvironmentId = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise.
func (o *APIKeyRead) GetObjectType() MemberAccessObj {
	if o == nil || IsNil(o.ObjectType) {
		var ret MemberAccessObj
		return ret
	}
	return *o.ObjectType
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetObjectTypeOk() (*MemberAccessObj, bool) {
	if o == nil || IsNil(o.ObjectType) {
		return nil, false
	}
	return o.ObjectType, true
}

// HasObjectType returns a boolean if a field has been set.
func (o *APIKeyRead) HasObjectType() bool {
	if o != nil && !IsNil(o.ObjectType) {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given MemberAccessObj and assigns it to the ObjectType field.
func (o *APIKeyRead) SetObjectType(v MemberAccessObj) {
	o.ObjectType = &v
}

// GetAccessLevel returns the AccessLevel field value if set, zero value otherwise.
func (o *APIKeyRead) GetAccessLevel() MemberAccessLevel {
	if o == nil || IsNil(o.AccessLevel) {
		var ret MemberAccessLevel
		return ret
	}
	return *o.AccessLevel
}

// GetAccessLevelOk returns a tuple with the AccessLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetAccessLevelOk() (*MemberAccessLevel, bool) {
	if o == nil || IsNil(o.AccessLevel) {
		return nil, false
	}
	return o.AccessLevel, true
}

// HasAccessLevel returns a boolean if a field has been set.
func (o *APIKeyRead) HasAccessLevel() bool {
	if o != nil && !IsNil(o.AccessLevel) {
		return true
	}

	return false
}

// SetAccessLevel gets a reference to the given MemberAccessLevel and assigns it to the AccessLevel field.
func (o *APIKeyRead) SetAccessLevel(v MemberAccessLevel) {
	o.AccessLevel = &v
}

// GetOwnerType returns the OwnerType field value
func (o *APIKeyRead) GetOwnerType() APIKeyOwnerType {
	if o == nil {
		var ret APIKeyOwnerType
		return ret
	}

	return o.OwnerType
}

// GetOwnerTypeOk returns a tuple with the OwnerType field value
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetOwnerTypeOk() (*APIKeyOwnerType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerType, true
}

// SetOwnerType sets field value
func (o *APIKeyRead) SetOwnerType(v APIKeyOwnerType) {
	o.OwnerType = v
}

// GetId returns the Id field value
func (o *APIKeyRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *APIKeyRead) SetId(v string) {
	o.Id = v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *APIKeyRead) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *APIKeyRead) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *APIKeyRead) SetSecret(v string) {
	o.Secret = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *APIKeyRead) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *APIKeyRead) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedByMember returns the CreatedByMember field value
func (o *APIKeyRead) GetCreatedByMember() OrgMemberRead {
	if o == nil {
		var ret OrgMemberRead
		return ret
	}

	return o.CreatedByMember
}

// GetCreatedByMemberOk returns a tuple with the CreatedByMember field value
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetCreatedByMemberOk() (*OrgMemberRead, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByMember, true
}

// SetCreatedByMember sets field value
func (o *APIKeyRead) SetCreatedByMember(v OrgMemberRead) {
	o.CreatedByMember = v
}

// GetLastUsedAt returns the LastUsedAt field value if set, zero value otherwise.
func (o *APIKeyRead) GetLastUsedAt() time.Time {
	if o == nil || IsNil(o.LastUsedAt) {
		var ret time.Time
		return ret
	}
	return *o.LastUsedAt
}

// GetLastUsedAtOk returns a tuple with the LastUsedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *APIKeyRead) GetLastUsedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUsedAt) {
		return nil, false
	}
	return o.LastUsedAt, true
}

// HasLastUsedAt returns a boolean if a field has been set.
func (o *APIKeyRead) HasLastUsedAt() bool {
	if o != nil && !IsNil(o.LastUsedAt) {
		return true
	}

	return false
}

// SetLastUsedAt gets a reference to the given time.Time and assigns it to the LastUsedAt field.
func (o *APIKeyRead) SetLastUsedAt(v time.Time) {
	o.LastUsedAt = &v
}

func (o APIKeyRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["project_id"] = o.ProjectId
	}
	if !IsNil(o.EnvironmentId) {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if !IsNil(o.ObjectType) {
		toSerialize["object_type"] = o.ObjectType
	}
	if !IsNil(o.AccessLevel) {
		toSerialize["access_level"] = o.AccessLevel
	}
	if true {
		toSerialize["owner_type"] = o.OwnerType
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["created_by_member"] = o.CreatedByMember
	}
	if !IsNil(o.LastUsedAt) {
		toSerialize["last_used_at"] = o.LastUsedAt
	}
	return json.Marshal(toSerialize)
}

type NullableAPIKeyRead struct {
	value *APIKeyRead
	isSet bool
}

func (v NullableAPIKeyRead) Get() *APIKeyRead {
	return v.value
}

func (v *NullableAPIKeyRead) Set(val *APIKeyRead) {
	v.value = val
	v.isSet = true
}

func (v NullableAPIKeyRead) IsSet() bool {
	return v.isSet
}

func (v *NullableAPIKeyRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAPIKeyRead(val *APIKeyRead) *NullableAPIKeyRead {
	return &NullableAPIKeyRead{value: val, isSet: true}
}

func (v NullableAPIKeyRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAPIKeyRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
