/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// AuthnMeUserRead struct for AuthnMeUserRead
type AuthnMeUserRead struct {
	ActorType *string `json:"actor_type,omitempty"`
	Id        string  `json:"id"`
	Key       string  `json:"key"`
	OrgId     string  `json:"org_id"`
	ProjectId string  `json:"project_id"`
	EnvId     string  `json:"env_id"`
	TenantId  string  `json:"tenant_id"`
	// Email of the user controlling this account
	Email string `json:"email"`
	// Name of this user
	Name *string `json:"name,omitempty"`
	// Given name of the user
	GivenName *string `json:"given_name,omitempty"`
	// Family name of the user
	FamilyName *string `json:"family_name,omitempty"`
	// URL to picture, photo, or avatar of the user that controls this account.
	Picture         *string                 `json:"picture,omitempty"`
	PermissionLevel ElementsPermissionLevel `json:"permission_level"`
	IsOnboarding    *bool                   `json:"is_onboarding,omitempty"`
	OnboardingStep  *string                 `json:"onboarding_step,omitempty"`
}

// NewAuthnMeUserRead instantiates a new AuthnMeUserRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthnMeUserRead(id string, key string, orgId string, projectId string, envId string, tenantId string, email string, permissionLevel ElementsPermissionLevel) *AuthnMeUserRead {
	this := AuthnMeUserRead{}
	var actorType string = "user"
	this.ActorType = &actorType
	this.Id = id
	this.Key = key
	this.OrgId = orgId
	this.ProjectId = projectId
	this.EnvId = envId
	this.TenantId = tenantId
	this.Email = email
	this.PermissionLevel = permissionLevel
	var isOnboarding bool = false
	this.IsOnboarding = &isOnboarding
	var onboardingStep string = "done"
	this.OnboardingStep = &onboardingStep
	return &this
}

// NewAuthnMeUserReadWithDefaults instantiates a new AuthnMeUserRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthnMeUserReadWithDefaults() *AuthnMeUserRead {
	this := AuthnMeUserRead{}
	var actorType string = "user"
	this.ActorType = &actorType
	var isOnboarding bool = false
	this.IsOnboarding = &isOnboarding
	var onboardingStep string = "done"
	this.OnboardingStep = &onboardingStep
	return &this
}

// GetActorType returns the ActorType field value if set, zero value otherwise.
func (o *AuthnMeUserRead) GetActorType() string {
	if o == nil || IsNil(o.ActorType) {
		var ret string
		return ret
	}
	return *o.ActorType
}

// GetActorTypeOk returns a tuple with the ActorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetActorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ActorType) {
		return nil, false
	}
	return o.ActorType, true
}

// HasActorType returns a boolean if a field has been set.
func (o *AuthnMeUserRead) HasActorType() bool {
	if o != nil && !IsNil(o.ActorType) {
		return true
	}

	return false
}

// SetActorType gets a reference to the given string and assigns it to the ActorType field.
func (o *AuthnMeUserRead) SetActorType(v string) {
	o.ActorType = &v
}

// GetId returns the Id field value
func (o *AuthnMeUserRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AuthnMeUserRead) SetId(v string) {
	o.Id = v
}

// GetKey returns the Key field value
func (o *AuthnMeUserRead) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *AuthnMeUserRead) SetKey(v string) {
	o.Key = v
}

// GetOrgId returns the OrgId field value
func (o *AuthnMeUserRead) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *AuthnMeUserRead) SetOrgId(v string) {
	o.OrgId = v
}

// GetProjectId returns the ProjectId field value
func (o *AuthnMeUserRead) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *AuthnMeUserRead) SetProjectId(v string) {
	o.ProjectId = v
}

// GetEnvId returns the EnvId field value
func (o *AuthnMeUserRead) GetEnvId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvId
}

// GetEnvIdOk returns a tuple with the EnvId field value
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetEnvIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvId, true
}

// SetEnvId sets field value
func (o *AuthnMeUserRead) SetEnvId(v string) {
	o.EnvId = v
}

// GetTenantId returns the TenantId field value
func (o *AuthnMeUserRead) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *AuthnMeUserRead) SetTenantId(v string) {
	o.TenantId = v
}

// GetEmail returns the Email field value
func (o *AuthnMeUserRead) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AuthnMeUserRead) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthnMeUserRead) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthnMeUserRead) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthnMeUserRead) SetName(v string) {
	o.Name = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *AuthnMeUserRead) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *AuthnMeUserRead) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *AuthnMeUserRead) SetGivenName(v string) {
	o.GivenName = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *AuthnMeUserRead) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *AuthnMeUserRead) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *AuthnMeUserRead) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *AuthnMeUserRead) GetPicture() string {
	if o == nil || IsNil(o.Picture) {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetPictureOk() (*string, bool) {
	if o == nil || IsNil(o.Picture) {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *AuthnMeUserRead) HasPicture() bool {
	if o != nil && !IsNil(o.Picture) {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *AuthnMeUserRead) SetPicture(v string) {
	o.Picture = &v
}

// GetPermissionLevel returns the PermissionLevel field value
func (o *AuthnMeUserRead) GetPermissionLevel() ElementsPermissionLevel {
	if o == nil {
		var ret ElementsPermissionLevel
		return ret
	}

	return o.PermissionLevel
}

// GetPermissionLevelOk returns a tuple with the PermissionLevel field value
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetPermissionLevelOk() (*ElementsPermissionLevel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PermissionLevel, true
}

// SetPermissionLevel sets field value
func (o *AuthnMeUserRead) SetPermissionLevel(v ElementsPermissionLevel) {
	o.PermissionLevel = v
}

// GetIsOnboarding returns the IsOnboarding field value if set, zero value otherwise.
func (o *AuthnMeUserRead) GetIsOnboarding() bool {
	if o == nil || IsNil(o.IsOnboarding) {
		var ret bool
		return ret
	}
	return *o.IsOnboarding
}

// GetIsOnboardingOk returns a tuple with the IsOnboarding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetIsOnboardingOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOnboarding) {
		return nil, false
	}
	return o.IsOnboarding, true
}

// HasIsOnboarding returns a boolean if a field has been set.
func (o *AuthnMeUserRead) HasIsOnboarding() bool {
	if o != nil && !IsNil(o.IsOnboarding) {
		return true
	}

	return false
}

// SetIsOnboarding gets a reference to the given bool and assigns it to the IsOnboarding field.
func (o *AuthnMeUserRead) SetIsOnboarding(v bool) {
	o.IsOnboarding = &v
}

// GetOnboardingStep returns the OnboardingStep field value if set, zero value otherwise.
func (o *AuthnMeUserRead) GetOnboardingStep() string {
	if o == nil || IsNil(o.OnboardingStep) {
		var ret string
		return ret
	}
	return *o.OnboardingStep
}

// GetOnboardingStepOk returns a tuple with the OnboardingStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeUserRead) GetOnboardingStepOk() (*string, bool) {
	if o == nil || IsNil(o.OnboardingStep) {
		return nil, false
	}
	return o.OnboardingStep, true
}

// HasOnboardingStep returns a boolean if a field has been set.
func (o *AuthnMeUserRead) HasOnboardingStep() bool {
	if o != nil && !IsNil(o.OnboardingStep) {
		return true
	}

	return false
}

// SetOnboardingStep gets a reference to the given string and assigns it to the OnboardingStep field.
func (o *AuthnMeUserRead) SetOnboardingStep(v string) {
	o.OnboardingStep = &v
}

func (o AuthnMeUserRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActorType) {
		toSerialize["actor_type"] = o.ActorType
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["org_id"] = o.OrgId
	}
	if true {
		toSerialize["project_id"] = o.ProjectId
	}
	if true {
		toSerialize["env_id"] = o.EnvId
	}
	if true {
		toSerialize["tenant_id"] = o.TenantId
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.GivenName) {
		toSerialize["given_name"] = o.GivenName
	}
	if !IsNil(o.FamilyName) {
		toSerialize["family_name"] = o.FamilyName
	}
	if !IsNil(o.Picture) {
		toSerialize["picture"] = o.Picture
	}
	if true {
		toSerialize["permission_level"] = o.PermissionLevel
	}
	if !IsNil(o.IsOnboarding) {
		toSerialize["is_onboarding"] = o.IsOnboarding
	}
	if !IsNil(o.OnboardingStep) {
		toSerialize["onboarding_step"] = o.OnboardingStep
	}
	return json.Marshal(toSerialize)
}

type NullableAuthnMeUserRead struct {
	value *AuthnMeUserRead
	isSet bool
}

func (v NullableAuthnMeUserRead) Get() *AuthnMeUserRead {
	return v.value
}

func (v *NullableAuthnMeUserRead) Set(val *AuthnMeUserRead) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthnMeUserRead) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthnMeUserRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthnMeUserRead(val *AuthnMeUserRead) *NullableAuthnMeUserRead {
	return &NullableAuthnMeUserRead{value: val, isSet: true}
}

func (v NullableAuthnMeUserRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthnMeUserRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
