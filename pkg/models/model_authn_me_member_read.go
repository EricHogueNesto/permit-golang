/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// AuthnMeMemberRead struct for AuthnMeMemberRead
type AuthnMeMemberRead struct {
	ActorType *string `json:"actor_type,omitempty"`
	Id        string  `json:"id"`
	// Email of the user controlling this account
	Email string `json:"email"`
	// Name of this user
	Name *string `json:"name,omitempty"`
	// Given name of the user
	GivenName *string `json:"given_name,omitempty"`
	// Family name of the user
	FamilyName *string `json:"family_name,omitempty"`
	// URL to picture, photo, or avatar of the user that controls this account.
	Picture        *string        `json:"picture,omitempty"`
	IsOnboarding   bool           `json:"is_onboarding"`
	OnboardingStep OnboardingStep `json:"onboarding_step"`
}

// NewAuthnMeMemberRead instantiates a new AuthnMeMemberRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthnMeMemberRead(id string, email string, isOnboarding bool, onboardingStep OnboardingStep) *AuthnMeMemberRead {
	this := AuthnMeMemberRead{}
	var actorType string = "member"
	this.ActorType = &actorType
	this.Id = id
	this.Email = email
	this.IsOnboarding = isOnboarding
	this.OnboardingStep = onboardingStep
	return &this
}

// NewAuthnMeMemberReadWithDefaults instantiates a new AuthnMeMemberRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthnMeMemberReadWithDefaults() *AuthnMeMemberRead {
	this := AuthnMeMemberRead{}
	var actorType string = "member"
	this.ActorType = &actorType
	return &this
}

// GetActorType returns the ActorType field value if set, zero value otherwise.
func (o *AuthnMeMemberRead) GetActorType() string {
	if o == nil || IsNil(o.ActorType) {
		var ret string
		return ret
	}
	return *o.ActorType
}

// GetActorTypeOk returns a tuple with the ActorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetActorTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ActorType) {
		return nil, false
	}
	return o.ActorType, true
}

// HasActorType returns a boolean if a field has been set.
func (o *AuthnMeMemberRead) HasActorType() bool {
	if o != nil && !IsNil(o.ActorType) {
		return true
	}

	return false
}

// SetActorType gets a reference to the given string and assigns it to the ActorType field.
func (o *AuthnMeMemberRead) SetActorType(v string) {
	o.ActorType = &v
}

// GetId returns the Id field value
func (o *AuthnMeMemberRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AuthnMeMemberRead) SetId(v string) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *AuthnMeMemberRead) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *AuthnMeMemberRead) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthnMeMemberRead) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthnMeMemberRead) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthnMeMemberRead) SetName(v string) {
	o.Name = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *AuthnMeMemberRead) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *AuthnMeMemberRead) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *AuthnMeMemberRead) SetGivenName(v string) {
	o.GivenName = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *AuthnMeMemberRead) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *AuthnMeMemberRead) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *AuthnMeMemberRead) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetPicture returns the Picture field value if set, zero value otherwise.
func (o *AuthnMeMemberRead) GetPicture() string {
	if o == nil || IsNil(o.Picture) {
		var ret string
		return ret
	}
	return *o.Picture
}

// GetPictureOk returns a tuple with the Picture field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetPictureOk() (*string, bool) {
	if o == nil || IsNil(o.Picture) {
		return nil, false
	}
	return o.Picture, true
}

// HasPicture returns a boolean if a field has been set.
func (o *AuthnMeMemberRead) HasPicture() bool {
	if o != nil && !IsNil(o.Picture) {
		return true
	}

	return false
}

// SetPicture gets a reference to the given string and assigns it to the Picture field.
func (o *AuthnMeMemberRead) SetPicture(v string) {
	o.Picture = &v
}

// GetIsOnboarding returns the IsOnboarding field value
func (o *AuthnMeMemberRead) GetIsOnboarding() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsOnboarding
}

// GetIsOnboardingOk returns a tuple with the IsOnboarding field value
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetIsOnboardingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsOnboarding, true
}

// SetIsOnboarding sets field value
func (o *AuthnMeMemberRead) SetIsOnboarding(v bool) {
	o.IsOnboarding = v
}

// GetOnboardingStep returns the OnboardingStep field value
func (o *AuthnMeMemberRead) GetOnboardingStep() OnboardingStep {
	if o == nil {
		var ret OnboardingStep
		return ret
	}

	return o.OnboardingStep
}

// GetOnboardingStepOk returns a tuple with the OnboardingStep field value
// and a boolean to check if the value has been set.
func (o *AuthnMeMemberRead) GetOnboardingStepOk() (*OnboardingStep, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnboardingStep, true
}

// SetOnboardingStep sets field value
func (o *AuthnMeMemberRead) SetOnboardingStep(v OnboardingStep) {
	o.OnboardingStep = v
}

func (o AuthnMeMemberRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActorType) {
		toSerialize["actor_type"] = o.ActorType
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.GivenName) {
		toSerialize["given_name"] = o.GivenName
	}
	if !IsNil(o.FamilyName) {
		toSerialize["family_name"] = o.FamilyName
	}
	if !IsNil(o.Picture) {
		toSerialize["picture"] = o.Picture
	}
	if true {
		toSerialize["is_onboarding"] = o.IsOnboarding
	}
	if true {
		toSerialize["onboarding_step"] = o.OnboardingStep
	}
	return json.Marshal(toSerialize)
}

type NullableAuthnMeMemberRead struct {
	value *AuthnMeMemberRead
	isSet bool
}

func (v NullableAuthnMeMemberRead) Get() *AuthnMeMemberRead {
	return v.value
}

func (v *NullableAuthnMeMemberRead) Set(val *AuthnMeMemberRead) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthnMeMemberRead) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthnMeMemberRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthnMeMemberRead(val *AuthnMeMemberRead) *NullableAuthnMeMemberRead {
	return &NullableAuthnMeMemberRead{value: val, isSet: true}
}

func (v NullableAuthnMeMemberRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthnMeMemberRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
