/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PDPState struct for PDPState
type PDPState struct {
	ApiVersion int32 `json:"api_version"`
}

// NewPDPState instantiates a new PDPState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPDPState(apiVersion int32) *PDPState {
	this := PDPState{}
	this.ApiVersion = apiVersion
	return &this
}

// NewPDPStateWithDefaults instantiates a new PDPState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPDPStateWithDefaults() *PDPState {
	this := PDPState{}
	return &this
}

// GetApiVersion returns the ApiVersion field value
func (o *PDPState) GetApiVersion() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *PDPState) GetApiVersionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *PDPState) SetApiVersion(v int32) {
	o.ApiVersion = v
}

func (o PDPState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["api_version"] = o.ApiVersion
	}
	return json.Marshal(toSerialize)
}

type NullablePDPState struct {
	value *PDPState
	isSet bool
}

func (v NullablePDPState) Get() *PDPState {
	return v.value
}

func (v *NullablePDPState) Set(val *PDPState) {
	v.value = val
	v.isSet = true
}

func (v NullablePDPState) IsSet() bool {
	return v.isSet
}

func (v *NullablePDPState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePDPState(val *PDPState) *NullablePDPState {
	return &NullablePDPState{value: val, isSet: true}
}

func (v NullablePDPState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePDPState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
