/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PDPConfigRead struct for PDPConfigRead
type PDPConfigRead struct {
	Id   string  `json:"id"`
	Name *string `json:"name,omitempty"`
	// Unique id of the organization that the pdp_config belongs to.
	OrganizationId string `json:"organization_id"`
	// Unique id of the project that the pdp_config belongs to.
	ProjectId string `json:"project_id"`
	// Unique id of the environment that the pdp_config belongs to.
	EnvironmentId string `json:"environment_id"`
	ClientSecret  string `json:"client_secret"`
}

// NewPDPConfigRead instantiates a new PDPConfigRead object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPDPConfigRead(id string, organizationId string, projectId string, environmentId string, clientSecret string) *PDPConfigRead {
	this := PDPConfigRead{}
	this.Id = id
	this.OrganizationId = organizationId
	this.ProjectId = projectId
	this.EnvironmentId = environmentId
	this.ClientSecret = clientSecret
	return &this
}

// NewPDPConfigReadWithDefaults instantiates a new PDPConfigRead object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPDPConfigReadWithDefaults() *PDPConfigRead {
	this := PDPConfigRead{}
	return &this
}

// GetId returns the Id field value
func (o *PDPConfigRead) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PDPConfigRead) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PDPConfigRead) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PDPConfigRead) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDPConfigRead) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PDPConfigRead) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PDPConfigRead) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value
func (o *PDPConfigRead) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *PDPConfigRead) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *PDPConfigRead) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetProjectId returns the ProjectId field value
func (o *PDPConfigRead) GetProjectId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *PDPConfigRead) GetProjectIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *PDPConfigRead) SetProjectId(v string) {
	o.ProjectId = v
}

// GetEnvironmentId returns the EnvironmentId field value
func (o *PDPConfigRead) GetEnvironmentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentId
}

// GetEnvironmentIdOk returns a tuple with the EnvironmentId field value
// and a boolean to check if the value has been set.
func (o *PDPConfigRead) GetEnvironmentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentId, true
}

// SetEnvironmentId sets field value
func (o *PDPConfigRead) SetEnvironmentId(v string) {
	o.EnvironmentId = v
}

// GetClientSecret returns the ClientSecret field value
func (o *PDPConfigRead) GetClientSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value
// and a boolean to check if the value has been set.
func (o *PDPConfigRead) GetClientSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientSecret, true
}

// SetClientSecret sets field value
func (o *PDPConfigRead) SetClientSecret(v string) {
	o.ClientSecret = v
}

func (o PDPConfigRead) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if true {
		toSerialize["project_id"] = o.ProjectId
	}
	if true {
		toSerialize["environment_id"] = o.EnvironmentId
	}
	if true {
		toSerialize["client_secret"] = o.ClientSecret
	}
	return json.Marshal(toSerialize)
}

type NullablePDPConfigRead struct {
	value *PDPConfigRead
	isSet bool
}

func (v NullablePDPConfigRead) Get() *PDPConfigRead {
	return v.value
}

func (v *NullablePDPConfigRead) Set(val *PDPConfigRead) {
	v.value = val
	v.isSet = true
}

func (v NullablePDPConfigRead) IsSet() bool {
	return v.isSet
}

func (v *NullablePDPConfigRead) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePDPConfigRead(val *PDPConfigRead) *NullablePDPConfigRead {
	return &NullablePDPConfigRead{value: val, isSet: true}
}

func (v NullablePDPConfigRead) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePDPConfigRead) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
