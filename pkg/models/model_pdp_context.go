/*
Permit.io API

 Authorization as a service

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// PDPContext struct for PDPContext
type PDPContext struct {
	CustomerId  string  `json:"customer_id"`
	ClientId    string  `json:"client_id"`
	BackendTier string  `json:"backend_tier"`
	Component   *string `json:"component,omitempty"`
}

// NewPDPContext instantiates a new PDPContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPDPContext(customerId string, clientId string, backendTier string) *PDPContext {
	this := PDPContext{}
	this.CustomerId = customerId
	this.ClientId = clientId
	this.BackendTier = backendTier
	var component string = "sidecar"
	this.Component = &component
	return &this
}

// NewPDPContextWithDefaults instantiates a new PDPContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPDPContextWithDefaults() *PDPContext {
	this := PDPContext{}
	var component string = "sidecar"
	this.Component = &component
	return &this
}

// GetCustomerId returns the CustomerId field value
func (o *PDPContext) GetCustomerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value
// and a boolean to check if the value has been set.
func (o *PDPContext) GetCustomerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerId, true
}

// SetCustomerId sets field value
func (o *PDPContext) SetCustomerId(v string) {
	o.CustomerId = v
}

// GetClientId returns the ClientId field value
func (o *PDPContext) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *PDPContext) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *PDPContext) SetClientId(v string) {
	o.ClientId = v
}

// GetBackendTier returns the BackendTier field value
func (o *PDPContext) GetBackendTier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackendTier
}

// GetBackendTierOk returns a tuple with the BackendTier field value
// and a boolean to check if the value has been set.
func (o *PDPContext) GetBackendTierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackendTier, true
}

// SetBackendTier sets field value
func (o *PDPContext) SetBackendTier(v string) {
	o.BackendTier = v
}

// GetComponent returns the Component field value if set, zero value otherwise.
func (o *PDPContext) GetComponent() string {
	if o == nil || IsNil(o.Component) {
		var ret string
		return ret
	}
	return *o.Component
}

// GetComponentOk returns a tuple with the Component field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDPContext) GetComponentOk() (*string, bool) {
	if o == nil || IsNil(o.Component) {
		return nil, false
	}
	return o.Component, true
}

// HasComponent returns a boolean if a field has been set.
func (o *PDPContext) HasComponent() bool {
	if o != nil && !IsNil(o.Component) {
		return true
	}

	return false
}

// SetComponent gets a reference to the given string and assigns it to the Component field.
func (o *PDPContext) SetComponent(v string) {
	o.Component = &v
}

func (o PDPContext) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["customer_id"] = o.CustomerId
	}
	if true {
		toSerialize["client_id"] = o.ClientId
	}
	if true {
		toSerialize["backend_tier"] = o.BackendTier
	}
	if !IsNil(o.Component) {
		toSerialize["component"] = o.Component
	}
	return json.Marshal(toSerialize)
}

type NullablePDPContext struct {
	value *PDPContext
	isSet bool
}

func (v NullablePDPContext) Get() *PDPContext {
	return v.value
}

func (v *NullablePDPContext) Set(val *PDPContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePDPContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePDPContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePDPContext(val *PDPContext) *NullablePDPContext {
	return &NullablePDPContext{value: val, isSet: true}
}

func (v NullablePDPContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePDPContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
